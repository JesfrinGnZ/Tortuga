package frontend.gui;

import backend.analizadorInstrucciones.AnalizadorInstrucciones;
import backend.analizadorInstrucciones.parser;
import backend.run.Run;
import calculosTortuga.Tortuga;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jesfrin
 */
public class FramePrincipal extends javax.swing.JFrame {

    private LienzoInternalF lienzo;
    private Tortuga tortuga;
    private HashMap<String, Integer> variablesDeArchivo;
    //Para maanejo de guardar archivo
    private boolean archivoEstaGuardado;
    private File rutaDeArchivo;
    private boolean seComenzoElDibujado;

    /**
     * Creates new form Principal
     */
    public FramePrincipal() {
        initComponents();
        llamarINternalFrame();
        setLocationRelativeTo(null);
        this.tortuga = new Tortuga(new Point(350, 200), 90, lienzo, this);
        this.variablesDeArchivo = new HashMap<>();
        this.archivoEstaGuardado = false;
        this.seComenzoElDibujado = false;
        this.rutaDeArchivo = null;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedorDesktopPane = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoDeCorridoTextArea = new javax.swing.JTextArea();
        ejecutarButton = new javax.swing.JButton();
        guardarCOmoButton = new javax.swing.JButton();
        abrirArchivoButton = new javax.swing.JButton();
        guardarArchivoButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        instruccionTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        instruccionesTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        mensajesTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        borrarInstruccionesButton = new javax.swing.JButton();
        guardarInstruccionesButton = new javax.swing.JButton();
        borrarMensjaesButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        salirMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        inicioDibujoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        javax.swing.GroupLayout contenedorDesktopPaneLayout = new javax.swing.GroupLayout(contenedorDesktopPane);
        contenedorDesktopPane.setLayout(contenedorDesktopPaneLayout);
        contenedorDesktopPaneLayout.setHorizontalGroup(
            contenedorDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        contenedorDesktopPaneLayout.setVerticalGroup(
            contenedorDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        jLabel1.setText("Archivo");

        textoDeCorridoTextArea.setColumns(20);
        textoDeCorridoTextArea.setRows(5);
        textoDeCorridoTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoDeCorridoTextAreaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(textoDeCorridoTextArea);

        ejecutarButton.setText("Ejecutar");
        ejecutarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarButtonActionPerformed(evt);
            }
        });

        guardarCOmoButton.setText("Guardar como");
        guardarCOmoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarCOmoButtonActionPerformed(evt);
            }
        });

        abrirArchivoButton.setText("Abrir ");
        abrirArchivoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArchivoButtonActionPerformed(evt);
            }
        });

        guardarArchivoButton.setText("Guardar");
        guardarArchivoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarArchivoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(abrirArchivoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ejecutarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarArchivoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(guardarCOmoButton)
                .addGap(72, 72, 72))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(198, 198, 198))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ejecutarButton)
                    .addComponent(guardarCOmoButton)
                    .addComponent(abrirArchivoButton)
                    .addComponent(guardarArchivoButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        instruccionTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                instruccionTextFieldKeyPressed(evt);
            }
        });

        instruccionesTextArea.setEditable(false);
        instruccionesTextArea.setColumns(20);
        instruccionesTextArea.setRows(5);
        jScrollPane2.setViewportView(instruccionesTextArea);

        mensajesTextArea.setEditable(false);
        mensajesTextArea.setColumns(20);
        mensajesTextArea.setRows(5);
        jScrollPane3.setViewportView(mensajesTextArea);

        jLabel4.setText("Instrucciones");

        jLabel5.setText("Mensajes");

        borrarInstruccionesButton.setText("Borrar instrucciones");
        borrarInstruccionesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarInstruccionesButtonActionPerformed(evt);
            }
        });

        guardarInstruccionesButton.setText("Guardar instrucciones");
        guardarInstruccionesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarInstruccionesButtonActionPerformed(evt);
            }
        });

        borrarMensjaesButton.setText("Borrar mensajes");
        borrarMensjaesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarMensjaesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(instruccionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(39, 39, 39)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(172, 172, 172))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardarInstruccionesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(borrarInstruccionesButton)
                .addGap(397, 397, 397)
                .addComponent(borrarMensjaesButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(instruccionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrarInstruccionesButton)
                    .addComponent(guardarInstruccionesButton)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(262, Short.MAX_VALUE)
                .addComponent(borrarMensjaesButton)
                .addContainerGap())
        );

        jLabel2.setText("Area de dibujo");

        salirMenu.setText("Exit");

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        salirMenu.add(jMenuItem1);

        jMenuBar1.add(salirMenu);

        jMenu2.setText("Start");

        inicioDibujoMenuItem.setText("Inicio");
        inicioDibujoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioDibujoMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(inicioDibujoMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(313, 313, 313)
                                .addComponent(jLabel2))
                            .addComponent(contenedorDesktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contenedorDesktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void instruccionTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_instruccionTextFieldKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {//VA revisando cuando se preciona enter
            if (this.seComenzoElDibujado) {
                String instruccion = this.instruccionTextField.getText();
                analizarExpresion(instruccion + "\n", Run.variablesPrograma);
                this.instruccionesTextArea.append(instruccion + "\n");//Se anade al conjunto de instrucciones
                this.instruccionTextField.setText("");//Se limpia el area de la instruccion actual
            } else {
                JOptionPane.showMessageDialog(this, "Debe comenzar el dibujado");
            }
        }
    }//GEN-LAST:event_instruccionTextFieldKeyPressed

    private void borrarInstruccionesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarInstruccionesButtonActionPerformed
        this.instruccionesTextArea.setText("");
    }//GEN-LAST:event_borrarInstruccionesButtonActionPerformed

    private void inicioDibujoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioDibujoMenuItemActionPerformed
        if (!seComenzoElDibujado) {
            this.tortuga.getImagen().dibujarTortuga(tortuga.getDireccion(), tortuga.getPuntoActual(), tortuga.getGraphic().getColor(), true);
            this.seComenzoElDibujado = true;
        }
    }//GEN-LAST:event_inicioDibujoMenuItemActionPerformed

    private void textoDeCorridoTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoDeCorridoTextAreaKeyPressed
        this.archivoEstaGuardado = false;
    }//GEN-LAST:event_textoDeCorridoTextAreaKeyPressed

    private void abrirArchivoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArchivoButtonActionPerformed
        if (seComenzoElDibujado) {
            if (rutaDeArchivo == null) {
                abrirArchivo();
            } else {
                if (archivoEstaGuardado) {
                    abrirArchivo();
                } else {
                    int opcion = JOptionPane.showConfirmDialog(this, "Desea guardar el archivo actual?");
                    if (opcion == 0) {
                        guardarArchivo();
                    }
                    abrirArchivo();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe comenzar el dibujado");
        }

    }//GEN-LAST:event_abrirArchivoButtonActionPerformed

    private void guardarArchivoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarArchivoButtonActionPerformed
        if (rutaDeArchivo == null) {
            JOptionPane.showMessageDialog(this, "No ha abierto ningun archivo");
        } else {
            guardarArchivo();
        }
    }//GEN-LAST:event_guardarArchivoButtonActionPerformed

    private void guardarCOmoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarCOmoButtonActionPerformed
        if (rutaDeArchivo == null) {
            JOptionPane.showMessageDialog(this, "No ha abierto ningun archivo");
        } else {
            guardarComo(this.textoDeCorridoTextArea);
        }
    }//GEN-LAST:event_guardarCOmoButtonActionPerformed

    private void ejecutarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarButtonActionPerformed
        String texto = this.textoDeCorridoTextArea.getText();
        if (rutaDeArchivo == null || texto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existe texto para analizar");
        } else {
            this.mensajesTextArea.append("-------------------------------INICIO ANALISIS ARCHIVO-----------------------\n");
            String[] instrucciones = texto.split("\n");
            for (int i = 0; i < instrucciones.length; i++) {
                analizarExpresion(instrucciones[i], this.variablesDeArchivo);
            }
            this.mensajesTextArea.append("-------------------------------FIN ANALISIS ARCHIVO-----------------------\n");
        }
    }//GEN-LAST:event_ejecutarButtonActionPerformed

    private void guardarInstruccionesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarInstruccionesButtonActionPerformed
        guardarComo(this.instruccionesTextArea);
    }//GEN-LAST:event_guardarInstruccionesButtonActionPerformed

    private void borrarMensjaesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarMensjaesButtonActionPerformed
        this.mensajesTextArea.setText("");
    }//GEN-LAST:event_borrarMensjaesButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirArchivoButton;
    private javax.swing.JButton borrarInstruccionesButton;
    private javax.swing.JButton borrarMensjaesButton;
    private javax.swing.JDesktopPane contenedorDesktopPane;
    private javax.swing.JButton ejecutarButton;
    private javax.swing.JButton guardarArchivoButton;
    private javax.swing.JButton guardarCOmoButton;
    private javax.swing.JButton guardarInstruccionesButton;
    private javax.swing.JMenuItem inicioDibujoMenuItem;
    private javax.swing.JTextField instruccionTextField;
    private javax.swing.JTextArea instruccionesTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea mensajesTextArea;
    private javax.swing.JMenu salirMenu;
    private javax.swing.JTextArea textoDeCorridoTextArea;
    // End of variables declaration//GEN-END:variables

    private void llamarINternalFrame() {
        LienzoInternalF lienzo = new LienzoInternalF();
        this.contenedorDesktopPane.add(lienzo);
        lienzo.setVisible(true);
        this.lienzo = lienzo;
    }

    public void escribirMensaje(String mensaje) {
        this.mensajesTextArea.append(mensaje);
    }

    public void analizarExpresion(String instruccion, HashMap<String, Integer> variablesPrograma) {
        AnalizadorInstrucciones lex = new AnalizadorInstrucciones(new BufferedReader(new StringReader(instruccion)));
        lex.iniciarFrame(this);
        parser sintactico = new parser(lex, this, this.tortuga, variablesPrograma);
        try {
            sintactico.parse();
        } catch (Exception ex) {
            Logger.getLogger(Run.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void actualizarTortuga() {
        this.tortuga = new Tortuga(new Point(350, 200), 90, lienzo, this);
    }

    //----------------------------------------------------------------Manejo de ficheros------------------------
    public void abrirArchivo() {
        //Variablesde ayuda en lectura
        String aux;
        //Variables y objetos para archivos
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filtroKok = new FileNameExtensionFilter("Archivos kok", "kok");
        file.setFileFilter(filtroKok);
        file.showOpenDialog(this);
        //abrimos el archivo seleccionado
        File archivo = file.getSelectedFile();
        this.rutaDeArchivo = archivo;
        if (archivo != null) {
            try {
                FileReader archivos = new FileReader(archivo);
                BufferedReader lee = new BufferedReader(archivos);
                this.textoDeCorridoTextArea.setText("");
                while ((aux = lee.readLine()) != null) {
                    this.textoDeCorridoTextArea.append(aux + "\n");
                }
                this.variablesDeArchivo = new HashMap<>();
            } catch (Exception ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void guardarArchivo() {
        FileWriter save;
        try {
            save = new FileWriter(rutaDeArchivo); //guardamos el archivo
            save.write(this.textoDeCorridoTextArea.getText());
            save.close();
            JOptionPane.showMessageDialog(null,
                    "El archivo se a guardado Exitosamente",
                    "Información", JOptionPane.INFORMATION_MESSAGE);
            this.archivoEstaGuardado = true;
        } catch (IOException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void guardarComo(JTextArea textArea) {
        try {
            JFileChooser file = new JFileChooser();
            file.showSaveDialog(this);
            File guarda = file.getSelectedFile();
            if (guarda != null) {
                //Eliminar el archivo actual
                FileWriter save = new FileWriter(guarda);//guardamos el archivo
                save.write(textArea.getText());
                save.close();
                JOptionPane.showMessageDialog(null,
                        "El archivo se a guardado Exitosamente",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
                rutaDeArchivo = guarda;
            }//Al ser archivo nullo no realizara accion
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,
                    "Su archivo no se ha guardado",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }
}
